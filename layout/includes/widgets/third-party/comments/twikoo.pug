- const { envId, lang, option } = theme.comment.twikoo
- const { lazyload, count } = theme.comment

script.
    async function initComment() {
        await twikoo.init({
            el: '#comment',
            envId: '#{envId}',
            onCommentLoaded: function () {
                GLOBAL_CONFIG.lightbox && utils.lightbox(document.querySelectorAll('#twikoo .tk-content img:not(.tk-owo-emotion)'))
                sco.owoBig()
                GLOBAL_CONFIG.comment.commentBarrage && PAGE_CONFIG.comment && (async () => {
                    initializeCommentBarrage(await fetchComments())
                })()
            },
            lang: '#{lang}',
            ...!{JSON.stringify(option)}
        })
        if (#{theme.post.meta.comment && is_post()}) {
            var countOptions = Object.assign(
                !{JSON.stringify(theme.comment.twikoo || {})},
                {
                    urls: [window.location.pathname],
                    includeReply: false
                }
            )
            const res = await twikoo.getCommentsCount(countOptions)
            try {
                document.getElementById('twikoo-count').innerText = res[0].count
                document.querySelector('.comment-headline span:last-child').innerText = ` (${res[0].count})`
            } catch (e) {
                document.getElementById('twikoo-count').innerText = '加载错误'
            }
        }

        async function fetchComments() {
            try {
                const response = await fetch("!{theme.comment.twikoo.envId}", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        event: "COMMENT_GET",
                        accessToken: "!{theme.comment.twikoo.accessToken}",
                        url: window.location.pathname
                    })
                });
                if (!response.ok) {
                    throw new Error("HTTP error! status: " + response.status);
                }
                const data = await response.json();
                return (data.data).map(item => Object.assign({
                    content: item.comment,
                    nick: item.nick,
                    mailMd5: item.mailMd5,
                    id: item.id
                }))
            } catch (error) {
                console.error("An error occurred while fetching comments: ", error);
            }
        }
    }