case theme.says.style
    when 1
        script.
            !async function () {
                const aplayerRegex = /{aplayer,(.*?),(.*?)}/g;
                const linkRegex = /(?<!\!)\[([^\]]*)\]\(([^\)]*)\)/g;
                const bilibiliRegex = /{bilibili,(.*?)}/g;
                const playerRegex = /{player,(.*?)}/g;
                const imageRegex = /!\[\]\((.*?)\)/g;
                const contentRegex = /#.*?\s([^{\n]*)/g;
                const response = await fetch("!{url_for(theme.says.mode_link)}");
                const data = await response.json();
                const list = data.slice(0, !{theme.says.strip});
                let aplayer, video, imageBox;

                document.querySelector('#waterfall').innerHTML = list.map(item => {
                    aplayer = item.content.match(aplayerRegex);
                    aplayer = aplayer ? `<div class="bber-music"><meting-js server="${aplayer[0].replace(aplayerRegex, '$1')}" type="song" id="${aplayer[0].replace(aplayerRegex, '$2')}" mutex="true" preload="none" theme="var(--sco-main)" data-lrctype="0"></meting-js></div>` : null;
                    video = item.content.match(playerRegex);
                    video = video ? `<div class="bber-video"><video src="${video[0].replace(playerRegex, '$1')}" controls="controls" style="object-fit: cover;"></video></div>` : item.content.match(bilibiliRegex);
                    video = item.content.match(bilibiliRegex) ? `<div class="bber-video"><iframe src="//player.bilibili.com/player.html?autoplay=0&bvid=${video[0].replace(bilibiliRegex, '$1')}" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>` : video;
                    imageBox = item.content.match(imageRegex);
                    imageBox = imageBox ? `<div class="bber-content-img">${imageBox.map(img => `<img src="${img.replace(imageRegex, '$1')}" title="即刻短文配图" />`).join('')}</div>` : '';
                    const time = new Date(item.createdTs * 1000).toISOString().replace('Z', '+08:00');
                    const content = item.content.match(contentRegex).map(item => item.replace(contentRegex, '$1'));
                    const link = item.content.match(linkRegex);
                    const linkHtml = link ? `<a class="bber-content-link" href='${link[0].replace(linkRegex, '$2')}' title="${link[0].replace(linkRegex, '$1')}" target="_blank"><i class="scoicon sco-link-m-line"></i>链接</a>` : '';
                    const replyHtml = content ? `<a class="bber-reply goComment" onclick="sco.toTalk('${content}')"><i class="scoicon sco-chat-fill" style="font-size: 1rem;"></i></a>` : '';
                    return `<li class="item">
                                <div id="bber-content">
                                    <p class="datacont">${content}</p>
                                    ${imageBox || ''}
                                </div>
                                ${video || ''}
                                ${aplayer || ''}
                                <hr>
                                <div class="bber-bottom">
                                    <div class="bber-info">
                                        <div class="bber-info-time">
                                            <i class="scoicon sco-calendar-todo-fill"></i>
                                            <time class="datetime" datetime="${time}"></time>
                                        </div>
                                        ${linkHtml}
                                    </div>
                                    ${replyHtml}
                                </div>
                            </li>`;
                }).join('');
                sco.reflashEssayWaterFall();
                GLOBAL_CONFIG.lazyload.enable && utils.lazyloadImg();
                GLOBAL_CONFIG.lightbox && utils.lightbox(document.querySelectorAll(".bber-content-img img"));
                changeTimeFormat();
            }();
    when 2
        script.
            !async function () {
                const aplayerRegex = /{aplayer,(.*?),(.*?)}/g;
                const bilibiliRegex = /{bilibili,(.*?)}/g;
                const playerRegex = /{player,(.*?)}/g;
                const imageRegex = /!\[\]\((.*?)\)/g;
                const contentRegex = /#.*?\s([^{\n]*)/g;
                const response = await fetch("!{url_for(theme.says.mode_link)}");
                const data = await response.json();
                const list = data.slice(0, !{theme.says.strip});
                let aplayer, video, imageBox;

                document.querySelector('#waterfall').innerHTML = list.map(item => {
                    aplayer = item.content.match(aplayerRegex);
                    aplayer = aplayer ? `<div class="bber-music"><meting-js server="${aplayer[0].replace(aplayerRegex, '$1')}" type="song" id="${aplayer[0].replace(aplayerRegex, '$2')}" mutex="true" preload="none" theme="var(--sco-main)" data-lrctype="0"></meting-js></div>` : null;
                    video = item.content.match(playerRegex);
                    video = video ? `<div class="bber-video"><video src="${video[0].replace(playerRegex, '$1')}" controls="controls" style="object-fit: cover;"></video></div>` : item.content.match(bilibiliRegex);
                    video = item.content.match(bilibiliRegex) ? `<div class="bber-video"><iframe src="//player.bilibili.com/player.html?autoplay=0&bvid=${video[0].replace(bilibiliRegex, '$1')}" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>` : video;
                    imageBox = item.content.match(imageRegex);
                    imageBox = imageBox ? `<div class="bber-content-img">${imageBox.map(img => `<img src="${img.replace(imageRegex, '$1')}" title="即刻短文配图" />`).join('')}</div>` : '';
                    const time = new Date(item.createdTs * 1000).toISOString().replace('Z', '+08:00');
                    const content = item.content.match(contentRegex).map(item => item.replace(contentRegex, '$1'));
                    const replyHtml = content ? `<a class="bber-reply goComment" onclick="sco.toTalk('${content}')"><i class="scoicon sco-chat-fill" style="font-size: 1rem;"></i></a>` : '';
                    return `<li class="item">
                                <div class="meta">
                                    <img class="no-lightbox nolazyload avatar" src="!{theme.aside.card.author.img}">
                                    <div class="info">
                                        <span class="bber_nick">#{config.author}</span>
                                        <time class="datetime bber_date" datetime="${time}"></time>
                                    </div>
                                    ${replyHtml}
                                </div>
                                <div id="bber-content">
                                    <p class="datacont">${content}</p>
                                    ${imageBox || ''}
                                </div>
                                ${video || ''}
                                ${aplayer || ''}
                            </li>`;
                }).join('');
                sco.reflashEssayWaterFall();
                GLOBAL_CONFIG.lazyload.enable && utils.lazyloadImg();
                GLOBAL_CONFIG.lightbox && utils.lightbox(document.querySelectorAll(".bber-content-img img"));
                changeTimeFormat();
            }();
