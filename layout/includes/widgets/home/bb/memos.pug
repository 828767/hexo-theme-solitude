script.
    async function getSays() {
        const bberTalk = document.querySelector('#bber-talk');
        if (!bberTalk) return;
        else bberTalk.innerHTML = '<div class="li-style swiper-slide"><i class="scoicon sco-loading-line"></i></div>';

        try {
            const response = await fetch('!{theme.says.mode_link}');
            const data = await response.json();

            const aplayerRegex = /{aplayer,(.*?),(.*?)}/g;
            const bilibiliRegex = /{bilibili,(.*?)}/g;
            const playerRegex = /{player,(.*?)}/g;
            const linkRegex = /(?<!\!)\[([^\]]*)\]\(([^\)]*)\)/g;
            const imageRegex = /!\[\]\((.*?)\)/g;
            const contentRegex = /#.*?\s([^{\n]*)/g;

            const list = data.slice(0, 10);
            bberTalk.innerHTML = list.map(item => {
                const content = item.content.match(contentRegex, '$1').map(item => item.replace(contentRegex, '$1'));
                const imageBox = item.content.match(imageRegex) ? '<i class="scoicon sco-image-fill"></i>' : '';
                const aplayer = item.content.match(aplayerRegex) ? '<i class="scoicon sco-disc-fill"></i>' : '';
                const video = item.content.match(playerRegex) ? '<i class="scoicon sco-video-fill"></i>' : item.content.match(bilibiliRegex) ? '<i class="scoicon sco-bilibili-line"></i>' : '';
                const link = item.content.match(linkRegex) ? `<i class="scoicon sco-link"></i>` : '';

                return `<div class="li-style swiper-slide">${content + aplayer + video + imageBox + link}</div>`;
            }).join(' ');

            sco.initbbtalk();
        } catch (error) {
            console.error('bbtime | ', error);
        }
    }

    document.addEventListener('DOMContentLoaded', getSays);
    document.addEventListener('pjax:complete', getSays);
